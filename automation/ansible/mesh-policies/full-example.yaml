apiVersion: kuma.io/v1alpha1
kind: TrafficRoute
mesh: default
metadata:
  name: full-example
spec:
  sources:
    - match:
        kuma.io/service: backend_default_svc_80
  destinations:
    - match:
        kuma.io/service: redis_default_svc_6379
  conf:
    http:
    - match:
        method: # one of either "prefix", "exact" or "regex" is allowed
          exact: GET
          regex: "^POST|PUT$"
        path: # one of either "prefix", "exact" or "regex" is allowed
          prefix: /users
          exact: /users/user-1
          regex: "^users$"
        headers:
          some-header: # one of either "prefix", "exact" or "regex" will be allowed
            exact: some-value
            prefix: some-
            regex: "^users$"
      modify: # optional section
        path: # one of "rewritePrefix" or "regex" is allowed
          rewritePrefix: /not-users # rewrites previously matched prefix
          regex: # (example to change the path from "/service/foo/v1/api" to "/v1/api/instance/foo")
            pattern: "^/service/([^/]+)(/.*)$"
            substitution: '\2/instance/\1'
        host: # one of "value" or "fromPath" is allowed
          value: "XYZ"
          fromPath: # (example to extract "envoyproxy.io" host header from "/envoyproxy.io/some/path" path)
            pattern: "^/(.+)/.+$"
            substitution: '\1'
        requestHeaders:
          add:
            - name: x-custom-header
              value: xyz
              append: true # if true then if there is x-custom-header already, it will append xyz to the value 
          remove:
            - name: x-something
        responseHeaders:
          add:
            - name: x-custom-header
              value: xyz
              append: true
          remove:
            - name: x-something
      destination: # one of "destination", "split" is allowed
        kuma.io/service: redis_default_svc_6379
      split:
        - weight: 100
          destination:
            kuma.io/service: redis_default_svc_6379
    destination: # one of "destination", "split" is allowed
      kuma.io/service: redis_default_svc_6379
    split:
      - weight: 100
        destination:
          kuma.io/service: redis_default_svc_6379
    loadBalancer: # one of "roundRobin", "leastRequest", "ringHash", "random", "maglev" is allowed    
      roundRobin: {}
      leastRequest:
        choiceCount: 8
      ringHash:
        hashFunction: "MURMUR_HASH_2"
        minRingSize: 64
        maxRingSize: 1024
      random: {}
      maglev: {}
