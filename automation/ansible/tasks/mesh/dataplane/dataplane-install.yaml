---
# tasks file for dataplane-isntall
- debug: 
    msg: "Dataplane {{ dataplane }}"

- block:
    - name: "Create Dataplane {{ dataplane['name'] }} Token"
      include_tasks: "{{ playbook_dir }}/tasks/mesh/token/create-dataplane-token.yaml"
      vars:
        global_control_plane: "{{ global_cp_addr }}"
        service_name: "{{ dataplane['name'] }}"

    - name: "Put Dataplane {{ dataplane['name'] }} Token on Host"
      ansible.builtin.copy:
        src: "tokens/{{ dataplane['name'] }}-service.token"
        dest: "/home/kuma/{{ dataplane['name'] }}-service.token"
        owner: kuma 
        group: kuma
        mode: '0644'

    - name: Push Gateway Dataplane Manifest
      ansible.builtin.template: 
        src: "gateway-nontransparent.yaml.j2"
        dest: "/home/kuma/dataplane-nontransparent.yaml"
        owner: kuma 
        group: kuma 
        mode: '0644'
      vars:
        addr: "{{ dataplane['dp_manifest']['networking']['addr'] }}"
        service: "{{ dataplane['name'] }}"
        inbound_kuma_service:  "{{ dataplane['dp_manifest']['inbound']['tags']['kuma_service'] }}"
        outbound: "{{ dataplane['dp_manifest']['outbound'] }}"
      when: dataplane['dp_type'] is defined and dataplane['dp_type'] == "gateway"

    - name: Push Standard Dataplane Manifest
      ansible.builtin.template:
        src: "standard-nontransparent.yaml.j2"
        dest: "/home/kuma/dataplane-nontransparent.yaml"
        owner: kuma 
        group: kuma 
        mode: '0644'
      vars:
        addr: "{{ dataplane['dp_manifest']['networking']['addr'] }}"
        service: "{{ dataplane['name'] }}"
        inbound_port: "{{ dataplane['dp_manifest']['inbound']['port'] }}"
        inbound_svc_port: "{{ dataplane['dp_manifest']['inbound']['svc_port'] }}"
        inbound_kuma_service: "{{ dataplane['dp_manifest']['inbound']['tags']['kuma_service'] }}"
      when: dataplane['dp_type'] is defined and dataplane['dp_type'] == "standard" 
        
    - name: Push Kuma DP Service to Host
      ansible.builtin.template:
        src: "{{ sysd_service }}.j2"
        dest: "/etc/systemd/system/{{ sysd_service }}"
      vars:
        zone_cp_hostname: "{{ dataplane['zone_addr'] }}"
        service: "{{ dataplane['name'] }}"
    
    - name: Start Dataplane Service
      include_tasks: "{{ playbook_dir }}/tasks/systemd/systemd-start.yaml"
      vars: 
        service: "{{ sysd_service }}"
  become: true