---
# tasks konnect-cert
- name: Create Runtime-Instance dir 
  ansible.builtin.file:
    path: runtime-instance
    state: directory
    mode: '0755'

- name: Create the Cluster Certificate
  block:
    - name: Create a Private Key
      community.crypto.openssl_privatekey:
        path: "{{ ri_path }}/cluster.key"
        type: "RSA"
        size: 4096

    - name: Create the CSR
      community.crypto.openssl_csr: 
        path: "{{ ri_path }}/cluster.csr"
        privatekey_path: "{{ ri_path }}/cluster.key"
        country_name: US
        common_name: kongdp

    - name: Generate a Self Signed OpenSSL certificate
      community.crypto.x509_certificate:
        path: "{{ ri_path }}/cluster.crt"
        privatekey_path: "{{ ri_path }}/cluster.key"
        csr_path: "{{ ri_path }}/cluster.csr"
        provider: selfsigned
      register: cert
    
    - name: Change Mode of Cert
      ansible.builtin.file:
        path: "{{ ri_path }}/{{ item }}"
        mode: u=rw,g=r,o=r
      with_items: 
        - cluster.crt
        - cluster.key
    
    - name: Get Base64 Cert 
      ansible.builtin.shell: |
        awk '{printf "%s\\n", $0}' runtime-instance/cluster.crt
      register: cert 
    
    - name: "Get Cert from Awk Output: {{ crt_secret }} - {{ runtime_group_name }}"
      ansible.builtin.set_fact: 
       crt_json: '{ "cert": "{{ cert.stdout }}" }'
    
    - debug:
        var: crt_json

  vars:
    ri_path: runtime-instance

- name: Get Konnect Cluster Attributes
  block:
  - name: "GET Konnect Runtime Group Data - {{ runtime_group_name }}"
    ansible.builtin.uri:
      url: "https://{{ api_url }}/v2/runtime-groups?filter%5Bname%5D%5Beq%5D={{ runtime_group_name }}"
      method: GET
      return_content: yes
      status_code: 200
      headers:
        Content-Type: application/json
        accept: application/json
        Authorization: "Bearer {{ konnect_pat }}"
    register: cp_content

  - name: "GET Konnect Runtime Group Data Response - {{ runtime_group_name }}"
    ansible.builtin.debug: 
      var: cp_content
      verbosity: 2

  - name: "Control Plane Facts - {{ runtime_group_name }}"
    ansible.builtin.set_fact:
      konnect_cp_id: "{{ cp_content.json.data[0]['id'] }}"
      konnect_cp_name: "{{ cp_content.json.data[0]['name']}}"
      konnect_cp_endpoint: "{{ cp_content.json.data[0]['config']['control_plane_endpoint'] | regex_replace('https://') | regex_replace('/') }}"
      konnect_tp_endpoint: "{{cp_content.json.data[0]['config']['telemetry_endpoint'] | regex_replace('https://') | regex_replace('/') }}"

  - name: "POST Dataplane Cert to Konnect - {{ runtime_group_name }}"
    ansible.builtin.uri:
      url: "https://{{ api_url }}/v2/runtime-groups/{{ konnect_cp_id }}/dp-client-certificates"
      method: POST
      body_format: json
      body: "{{ crt_json }}"
      status_code: [ 201, 409 ]
      headers:
        Content-Type: application/json
        accept: application/json
        Authorization: "Bearer {{ konnect_pat }}"
    register: cert_request

  vars:
    api_url: "us.api.konghq.com"

- name: Check if Kong Container is Running
  community.docker.docker_container_info: 
    name: kong-dp
  register: kong_dp

- name: Delete Kong DP container 
  ansible.builtin.shell: |
    docker kill kong-dp 
    docker rm kong-dp 
  when: kong_dp.exists 

- name: Run Kong DP Container
  ansible.builtin.shell: |
      docker run -d --name kong-dp --network host \
        -e "KONG_ROLE=data_plane" \
        -e "KONG_DATABASE=off" \
        -e "KONG_KONNECT_MODE=on" \
        -e "KONG_VITALS=off" \
        -e "KONG_NGINX_WORKER_PROCESSES=1" \
        -e "KONG_CLUSTER_MTLS=pki" \
        -e "KONG_CLUSTER_CONTROL_PLANE={{ konnect_cp_endpoint }}:443" \
        -e "KONG_CLUSTER_SERVER_NAME={{ konnect_cp_endpoint }}" \
        -e "KONG_CLUSTER_TELEMETRY_ENDPOINT={{ konnect_tp_endpoint }}:443" \
        -e "KONG_CLUSTER_TELEMETRY_SERVER_NAME={{ konnect_tp_endpoint }}" \
        -e "KONG_CLUSTER_CERT=/config/cluster.crt" \
        -e "KONG_CLUSTER_CERT_KEY=/config/cluster.key" \
        -e "KONG_LUA_SSL_TRUSTED_CERTIFICATE=system,/config/cluster.crt" \
        --mount type=bind,source="$(pwd)",target=/config,readonly \
        -p 8000:8000 \
        -p 8443:8443 \
        kong/kong-gateway:3.0.0.0
  args:
    chdir: "{{ ri_path }}"
  vars: 
    ri_path: runtime-instance