ARG ARCH

FROM --platform=linux/${ARCH} python:3.10-alpine as build

ENV PYTHONPATH=/usr/local/lib/python3.10/site-packages:/root/ansible/pip/usr/local/lib/python3.10/site-packages
ENV PATH=/root/ansible/pip/usr/local/bin:$PATH
ENV HELM_VER=v3.9.4
ENV AWS_IAM_AUTHENTICATOR_VER=0.5.9
ARG ARCH

COPY ./ansible /kmj

# install python deps
RUN apk add --no-cache gcc libc-dev libffi-dev
RUN pip3 install --root /root/ansible/pip -r /kmj/requirements.txt

# install ansible collection deps
RUN mkdir /kmj/collections && \
    ansible-galaxy collection install -r /kmj/requirements.yaml -p /kmj/collections/

# install binary deps: helm, aws-iam-authenticator, openssh
RUN wget https://get.helm.sh/helm-${HELM_VER}-linux-${ARCH}.tar.gz \
        -O /tmp/helm.tar.gz && \
    tar -xvzf /tmp/helm.tar.gz \
        -C /tmp && \
    mv /tmp/linux-${ARCH}/helm /bin && \
    chmod +x /bin/helm; \
    wget  https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v${AWS_IAM_AUTHENTICATOR_VER}/aws-iam-authenticator_${AWS_IAM_AUTHENTICATOR_VER}_linux_${ARCH} \
        -O /bin/aws-iam-authenticator && \
    chmod +x /bin/aws-iam-authenticator; 

# Create final product
FROM --platform=linux/${ARCH} python:3.10-alpine

ENV PYTHONPATH=/usr/local/lib/python3.10/site-packages:/root/ansible/pip/usr/local/lib/python3.10/site-packages
ENV PATH=/root/ansible/pip/usr/local/bin:$PATH
ENV ANSIBLE_FORCE_COLOR=1

RUN apk add --update --no-cache openssh-client

COPY --from=build /root/ansible /root/ansible

COPY --from=build /bin/helm /bin/helm

COPY --from=build /bin/aws-iam-authenticator /bin/aws-iam-authenticator

COPY --from=build /kmj /kmj

ENTRYPOINT [ "ansible-playbook" ]